// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace server.Migrations
{
    [DbContext(typeof(HamsterDBContext))]
    partial class HamsterDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("server.Models.ItemEnergyHistoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Energy")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ItemEnergyHistoryModel");
                });

            modelBuilder.Entity("server.Models.ItemGroupModel", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ItemGroupModel");
                });

            modelBuilder.Entity("server.Models.ItemLevelHistoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ItemLevelHistoryModel");
                });

            modelBuilder.Entity("server.Models.ItemModel", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CVA")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Energy")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Gem")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Gold")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemGroupRefID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Picture")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerID")
                        .HasColumnType("TEXT");

                    b.Property<int>("SellStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ItemModel");
                });

            modelBuilder.Entity("server.Models.ItemRarityModel", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ItemRarityModel");
                });

            modelBuilder.Entity("server.Models.ItemStatusHistoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ASPD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ATK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRIDMG")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DEF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EVA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ItemID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("ItemStatusHistoryModel");
                });

            modelBuilder.Entity("server.Models.ItemStatusModel", b =>
                {
                    b.Property<string>("ItemID")
                        .HasColumnType("TEXT");

                    b.Property<int>("ASPD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ATK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRIDMG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DEF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EVA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemID");

                    b.ToTable("ItemStatusModel");
                });

            modelBuilder.Entity("server.Models.ItemTypeModel", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ItemTypeModel");
                });

            modelBuilder.Entity("server.Models.PlayerModel", b =>
                {
                    b.Property<string>("PlayerID")
                        .HasColumnType("TEXT");

                    b.Property<int>("BestTimeMilliseconds")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CVA")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Gem")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Gold")
                        .HasColumnType("TEXT");

                    b.Property<int>("TopScore")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PlayerID");

                    b.ToTable("PlayerModel");
                });

            modelBuilder.Entity("server.Models.PlayerStatusHistoryModel", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ASPD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ATK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRIDMG")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("DEF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EVA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("PlayerStatusHistoryModel");
                });

            modelBuilder.Entity("server.Models.PlayerStatusModel", b =>
                {
                    b.Property<string>("PlayerID")
                        .HasColumnType("TEXT");

                    b.Property<int>("ASPD")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ATK")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRI")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CRIDMG")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DEF")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EVA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerID");

                    b.ToTable("PlayerStatusModel");
                });

            modelBuilder.Entity("server.Models.TransferTransactionModel", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CVAAmount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FromPlayerID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GemAmount")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GoldAmount")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemID")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToPlayerID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("TransferTransactionModel");
                });
#pragma warning restore 612, 618
        }
    }
}
